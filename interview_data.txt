#include <iostream>
#include <vector>
#include <algorithm>

int main() {
    int N;
    std::cin >> N;
    
    std::vector<int> bambooShoots(N);
    
    for (int i = 0; i < N; i++) {
        std::cin >> bambooShoots[i];
    }
    
    std::sort(bambooShoots.begin(), bambooShoots.end());
    
    int maxInstallationSize = 2; // The minimum installation size is 2, as we need at least two bamboo shoots.
    
    for (int i = 0; i < N; i++) {
        for (int j = i + 1; j < N; j++) {
            int diff = bambooShoots[j] - bambooShoots[i];
            int currentSize = 2; // We have at least two bamboo shoots in the installation.
            
            int nextLength = bambooShoots[j] + diff;
            while (std::binary_search(bambooShoots.begin(), bambooShoots.end(), nextLength)) {
                currentSize++;
                nextLength += diff;
            }
            
            maxInstallationSize = std::max(maxInstallationSize, currentSize);
        }
    }
    
    std::cout << maxInstallationSize << std::endl;
    
    return 0;
}